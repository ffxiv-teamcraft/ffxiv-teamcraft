defaults: &defaults
  working_directory: ~/ffxiv-teamcraft
  docker:
    - image: supamiu/circleci-node-wine


version: 2.1
orbs:
  win: circleci/windows@2.2.0
  aws-cli: circleci/aws-cli@1.3.1
jobs:
  setup:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install local dependencies
          command: yarn install --immutable
      - run:
          name: Install functions dependencies
          command: cd functions && npm install && cd ../
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/
          paths:
            - ffxiv-teamcraft/*
            - .cache/*


  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Lint code and JSON
          command: yarn run lint


  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Testing
          command: yarn run test
      - run:
          name: Codecov upload
          command: yarn run codecov


  e2e:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Testing
          command: yarn run e2e:ci


  build:
    working_directory: ~/ffxiv-teamcraft
    docker:
      - image: supamiu/circleci-node-wine
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                yarn run build:prod
            else
                yarn run build:beta
            fi
          no_output_timeout: 30m
      - persist_to_workspace:
          root: ~/
          paths:
            - ffxiv-teamcraft/dist/*
            - .cache/*


  deploy-firebase-hosting:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploying web
          command: ./node_modules/.bin/firebase deploy -P default --only hosting --token "$FIREBASE_TOKEN"


  deploy-functions:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploying functions
          command: ./node_modules/.bin/firebase deploy -P default --only functions --token "$FIREBASE_TOKEN"

  release-desktop:
    executor: win/default
    working_directory: ~/ffxiv-teamcraft
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v2-deps-{ .Branch }-{ checksum "yarn.lock" }
      - run:
          name: Reinstalling dependencies for windows
          command: yarn install --immutable
      - run:
          name: Deploying desktop on github
          command: yarn run electron:setup:publish
      - persist_to_workspace:
          root: ~/
          paths:
            - ffxiv-teamcraft/release/*


  deploy-staging:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploying web
          command: ./node_modules/.bin/firebase deploy -P beta --only hosting --token "$FIREBASE_TOKEN"


  deploy-staging-functions:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploying functions
          command: ./node_modules/.bin/firebase deploy -P beta --only functions --token "$FIREBASE_TOKEN"


  deploy-cdn:
    <<: *defaults
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - attach_workspace:
          at: ~/
      - run:
          name: Copying standard files to CDN Bucket
          command: aws s3 cp ./dist/apps/client/ s3://cdn-ffxivteamcraft/ --exclude "*.html" --exclude "/*.js" --exclude "assets/data/*" --exclude "assets/extracts/*" --recursive --cache-control max-age=7200 --endpoint=https://fra1.digitaloceanspaces.com --acl public-read
      - run:
          name: Copying lazy data files and JS bundles to CDN Bucket
          command: aws s3 cp ./dist/apps/client/ s3://cdn-ffxivteamcraft/ --exclude "*" --include "/*.js" --include "assets/data/*" --include "assets/extracts/*" --recursive --cache-control max-age=31536000 --endpoint=https://fra1.digitaloceanspaces.com --acl public-read
      - run:
          name: Copying new index.html to CDN Bucket
          command: aws s3 cp ./dist/apps/client/index.html s3://cdn-ffxivteamcraft/ --cache-control max-age=120 --endpoint=https://fra1.digitaloceanspaces.com --acl public-read

  deploy-desktop-update:
    <<: *defaults
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - attach_workspace:
          at: ~/
      - run:
          name: Copying desktop update to update Bucket
          command: aws s3 cp ./release/squirrel-windows/* s3://update-ffxivteamcraft/ --endpoint=https://fra1.digitaloceanspaces.com --acl public-read


workflows:
  version: 2
  flow:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - lint
            - test
      - deploy-cdn:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-firebase-hosting:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-functions:
          requires:
            - build
          filters:
            branches:
              only: master
      - release-desktop:
          requires:
            - lint
            - test
          filters:
            branches:
              only: master
      - deploy-desktop-update:
          requires:
            - release-desktop
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-staging-functions:
          requires:
            - build
          filters:
            branches:
              only: staging

